name,parameters,example,description,notes,version,scope
remove_decision,allows to remove specified decision without running remove_effect.,remove_decision = ger_mepo,removes a decision.,,1.6,country
swap_ruler_traits,similar to swap_ideas. removes one trait and adds another.,swap_ruler_traits = { remove = <trait> add = <trait> },swaps traits.,,1.6,country
remove_exile_tag,"remove the exile tag on a army leader, making them no longer be considered exile leaders.","remove_exile_tag = { usa = ""arturo rawson"" }",removes a leaders exile tag.,,1.6,unit leader
add_legitimacy,adds legitimacy to a government in exile.,add_legitimacy = 10,adds legitimacy.,,1.6,country
set_legitimacy,sets the legitimacy of governments in exile.,set_legitimacy= { pol = 1.0 },sets legitimacy.,,1.6,country
become_exiled_in,"makes a country a government in exile in a set country, with a set starting legitimacy.",become_exiled_in = { target = <host tag> legitimacy = <0-1> starting legitimacy },creates a government in exile.,"must be fired from root, the country that should be exiled, or a tag specification must be used.",1.6,country
end_exile,ends a government in exile.,end_exile,ends a government in exile.,,1.6,country
add_province_modifier,adds a province modifier.,add_province_modifier = { 5246 = mud },adds a province modifier.,"new modifiers can be created in the ""weather.txt"" file.",1.6,state
remove_province_modifier,removes a province modifier.,remove_province_modifier = { 5246 = mud },removes a province modifier.,"new modifiers can be created in the ""weather.txt"" file.",1.6,state
set_faction_name,sets a faction name as the loc name.,set_faction_name = some_loc_key,changes faction names.,,1.6,state
add_nuclear_bombs,adds nuclear bomb to tag's stockpile.,add_nuclear_bombs = 100,adds specified number of nukes to the country's stockpile,needs the nuke tech to use.,1.6,country
launch_nuke,nukes a province.,launch_nuke = {??? province = 42 ??? state = 42??? controller = ger ??? use_nuke = yes },"nukes a province. when using state it nukes a random province in said state, with a preference to enemy occupied provinces.",requires nuke tech and nukes. removes a nuke from stockpile when used.,1.6,state
inherit_technology,transfers all of a nations techs to a specified tag.,inherit_technology = can,transfers tech.,useful in civil wars and when countries split. the scoped country inherits the techs from the targeted tag so be careful with the scope.,1.6,country
set_fuel_ratio,set country's current fuel ratio relative to its capacity.,set_fuel_ratio,sets country's current fuel ratio.,,1.6,country
add_mines,add mines to a strategic region for the current country.,add_mines = { region = 42 amount = 100 },add mines to a strategic region.,,1.6,country
give_resource_rights,gives resource rights,give_resource_rights = { receiver = eng state = 291 },gives all the resources of a state to the target country,see 04_mtg_on_actions,1.6,country
remove_resource_rights,removes resource rights,eng = { remove_resource_rights = 477 },removes given resource rights,,1.6,country
set_global_flag,<flag>an unique string to identify the global flag with.,set_global_flag = my_flag,defines a global flag.,,1,any
clr_global_flag,<flag>the unique string of a global flag to clear.,clr_global_flag = my_flag,clears a defined global flag.,,1,any
modify_global_flag,flag = <flag>the global flag to modify. value = <value>the value to set it to: 0 or 1,modify_global_flag = {     flag = my_flag     value = 1 },modifies a global flag.,use variables instead.,1,any
custom_effect_tooltip,<string>an localized string to display in the tooltip.,custom_effect_tooltip = my_tooltip_tt,displays a localized key in the effect tooltip.,,1,any
log,<string>an string to in the game.log,"log = ""myvariable: [?myvariable]""",displays a string in the game.log when executed.,"accepts all localization commands (i.e. [root.getname], etc)",1.5,any
save_event_target_as,<string>an unique string to identify the event target with.,capital_scope = {     save_event_target_as = my_state },saves the current scope as a key. is cleared once execution ends (i.e. end of event).,use event_target:<key> to access the scope.do not use in scripted guis.,1,any
save_global_event_target_as,<string>an unique string to identify the global event target with.,random_other_country = {     save_global_event_target_as = my_country },saves the current scope as a key. persists after execution until cleared via effect.,use event_target:<key> to access the scope.do not use in scripted guis.,1,any
clear_global_event_target,<string>the unique string of the global event target to clear.,clear_global_event_target = my_country,clears a specific global event target.,,1,any
clear_global_event_targets,yesboolean.,clear_global_event_targets = yes,clears all global event targets.,,1,any
break,none,break,stops execution of effects in current scope.,,1,any
sound_effect,<string>a sound reference from an .asset file.,"sound_effect = ""boom""",plays the specified sound once.,,1,any
randomize_weather,<int>a seed integer.,randomize_weather = 12345,randomizes the weather with the specified seed.,,1,any
set_province_name,id = <id>the id of the province to be changed. name = <string>the name to change the province to.,"set_province_name = {     id = 325     name = ""funland"" }",changes the specified province's name to the specified name.,,1.3,any
reset_province_name,<id>the id of the province to reset.,reset_province_name = 325,resets the specified province's name.,,1.3,any
goto_province,<id>the id of the province go to.,goto_province = 325,moves the camera position over the specified province.,,1,any
goto_state,<scope> / <variable>the id of the state go to.,goto_state = 1  goto_state = var:some_state,moves the camera position over the specified state.,,1,any
change_tag_from,<scope> / <variable>the country to change from.,ger = { change_tag_from = root }  ger = { change_tag_from = var:from.country },changes the player to the current scope from the target scope.,the country the player becomes needs to be the scope in which the command is used.,1,any
start_border_war,change_state_after_war = <bool> whether the state changes hands after the war. attacker scope state = <id> / <variable> the attacker state. num_provinces = <id> the number of provinces used in the state. on_win = <id> the event to fire for the attacker on a win. on_lose = <id> the event to fire for the attacker on a loss. on_cancel= <id> the event to fire for the attacker on a draw. defender scope state = <id> / <variable> the defender state. num_provinces = <id> the number of provinces used in the state. on_win = <id> the event to fire for the defender on a win. on_lose = <id> the event to fire for the defender on a loss. on_cancel= <id> the event to fire for the defender on a draw.,"start_border_war = {     change_state_after_war = no     attacker = {         state = 527         num_provinces = 4         on_win = japan_border_conflict.2         on_lose = japan_border_conflict.3         on_cancel = japan_border_conflict.4     } 				     defender = {         state = 408         num_provinces = 4         on_win = japan_border_conflict.3         on_lose = japan_border_conflict.2         on_cancel = japan_border_conflict.4     } }",starts a border war for the specified attacker and defender. the participating countries are the owners of the specified states.,,1.5,country
set_border_war_data,attacker = <id> / <variable> the attacker state. defender = <id> / <variable> the defender state. attacker_modifier = <id> / <variable> the modifier applied to attacker strength. defender_modifier = <id> / <variable> the modifier applied to attacker strength. combat_width = <id> / <variable> the combat width used in the border war battle.,set_border_war_data = {     attacker = 527     defender = 408     defender_modifier = 0.15     combat_width = 100 },sets the bonuses or penalties for the attacker and defender in an on-going border war. used after start_border_war.,,1.5,country
cancel_border_war,attacker = <id> / <variable> the attacker state. defender = <id> / <variable> the defender state. dont_fire_events = <bool> stops the events from start_border_war from firing.,cancel_border_war = {     dont_fire_events = yes     defender = 408     attacker = 527 },cancels an on-going border war without a winner.,,1.5,country
finalize_border_war,attacker = <id> / <variable> the attacker state. defender = <id> / <variable> the defender state. attacker_win = <bool> makes the attacker the winner. defender_win = <bool> makes the defender the winner.,finalize_border_war = {     attacker_win = yes     attacker = 527     defender = 408 },ends an on-going border war.,,1.5,country
set_country_flag,<flag> an unique string to identify the country flag with.,set_country_flag = my_flag,defines a country flag.,,1,country
clr_country_flag,<flag> the unique string of a country flag to clear.,clr_country_flag = my_flag,clears a defined country flag.,,1,country
modify_country_flag,flag = <flag> the country flag to modify. value = <value> the value to set it to: 0 or 1,modify_country_flag = {     flag = my_flag     value = 1 },modifies a country flag.,use variables instead.,1.3,country
country_event,"id = <event> the event to fire. days = <event> / <variable> fires the event in the specified number of days. optional. hours = <event> / <variable> fires the event in the specified number of hours. optional. random = <event> adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. optional.",country_event = {     id = my_event.1     days = 10     random = 50 },fires the specified event for the current country.,where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1,country
news_event,"id = <event> the event to fire. days = <event> / <variable> fires the event in the specified number of days. optional. hours = <event> / <variable> fires the event in the specified number of hours. optional. random = <event> adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. optional.",news_event = {     id = my_event.1     days = 10     random = 50 },fires the specified news event for the current country.,the news event uses a different interface to the country event. where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1,country
set_cosmetic_tag,<string> the cosmetic tag to switch to.,set_cosmetic_tag = saf_sov_communism,"makes the current scope use the specified cosmetic tag, changing name and flag.",,1.3,country
drop_cosmetic_tag,<bool> boolean.,drop_cosmetic_tag = yes,makes the current scope drop the current cosmetic tag they are using.,,1.3,country
set_rule,<rule> boolean.,set_rule = {     can_create_factions = yes },toggles the special game rules for the current scope.,possible rules: can_be_called_to_war can_boost_other_ideologies can_create_factions can_declare_war_on_same_ideology can_declare_war_without_wargoal_when_in_war can_decline_call_to_war can_force_government can_generate_female_aces can_guarantee_other_ideologies can_join_factions can_join_factions_not_allowed_diplomacy can_join_opposite_factions can_lower_tension can_not_declare_war can_occupy_non_war can_only_justify_war_on_threat_country can_use_kamikaze_pilots units_deployed_to_overlord (subjects only),1,country
add_threat,<int> the amount to change by.,add_threat = 10,adjusts the level of world tension.,,1,country
add_named_threat,threat = <int> the amount to change by. name = <string> the localization string.,add_named_threat = {      threat = 5      name = ger_rhineland },adjusts the level of world tension and adds an entry in the world tension tooltip.,,1,country
annex_country,target = <scope> which country to annex. transfer_troops = yes whether to transfer the troops of the annexed country.,annex_country = {     target = ger     transfer_troops = yes },annex the specified country for the current scope.,,1,country
add_to_war,targeted_alliance = <scope> the country to assist. enemy = <scope> the country attacking the ally. hostility_reason = <string> localization for the reason for joining. optional.,add_to_war = {      targeted_alliance = prev      enemy = hun      hostility_reason = asked_to_join },adds the current scope into the war of their ally against the specified enemy.,,1,country
declare_war_on,target = <scope> / <variable> the country to attack. type = <wargoal> the wargoal to declare with.,declare_war_on = {     target = ger     type = annex_everything },makes the current scope declare war on the specified country with the specified wargoal.,wargoals are found in /hearts of iron iv/common/wargoals/*.txt.,1,country
white_peace,<scope> / <variable> the scope to white peace. <message> the reason for peace.,white_peace = ger  white_peace = {     tag = ger     message = example },makes the current scope white peace the specified scope.,,1,country
set_truce,target = <scope> the scope to truce with. days = <int> the duration of the truce.,set_truce = {     target = ger     days = 90 },makes the current scope truce with the specified scope.,,1,country
create_wargoal,target = <scope> / <variable> the country to target. type = <wargoal> the wargoal to generate. generator = { <state id> } the states to supply the wargoal (i.e. take_state_focus).,create_wargoal = {     type = puppet_wargoal_focus     target = root },grants the current scope a wargoal against the specified country.,,1,country
start_civil_war,ideology = <ideology> the ideology of the breakaway country. ruling_party = <ideology> the ruling party of the original country. optional. size = <float> the size of the breakaway country and the fraction of the original stockpile and military units it will receive. optional. capital = <state> the capital of the breakaway country. optional. only_own_territory = <bool> limits the breakaway country to only own territory. optional. states = { <state> } the states included in the breakway country. optional. states_filter = { <triggers> } filters to apply to the state assignment for the breakaway country. optional. keep_unit_leaders = { <unit leader id> } keep the specified leaders. optional. keep_unit_leaders_trigger = { <triggers> keep the specified leaders that meet the triggers. optional.,start_civil_war = {     ruling_party = communism     ideology = root     size = 0.8     only_own_territory = no     capital = 282     states = {          282 533 536 555 529 530 528      }     keep_unit_leaders = {         750 751 752     } },starts a civil war for the current scope with the specified parameters.,,1,country
add_resource,type = <resource> the resource to add. amount = <int> the amount of resource to add. state = <id>which state to add the resource to.,add_resource = {     type = oil     amount = 50     state = 88 },adds the specified resource in the specified amount to the specified state.,,1,country
create_import,resource = <resource> the resource to import. amount = <int> the amount of resource to import. exporter = <id>which country exports the resource.,create_import = {     resource = steel     amount = 100     exporter = ger },creates an import for the current scope with the specified resource and from the specified exporter.,,1,country
add_offsite_building,type = <building> the building to add. level = <level> / <variable> the maximum level to add.,add_offsite_building = { type = arms_factory level = 1 },adds an off-map building for the current scope that produces its effects without being present in a state.,,1.5,country
modify_building_resources,building = <building> the building to modify. resource = <resource> the resource to add. amount = <amount> the amount of resource to add.,modify_building_resources = {     building = synthetic_refinery     resource = oil     amount = 1 },modifies the resource output of the specified building for the current scope.,,1.5,country
load_focus_tree,"<string> the focus tree to load.alternatively, as an effect block:tree = <string>keep_completed = yes/no",load_focus_tree = china_communist_focusload_focus_tree = { tree = british_focus keep_completed = yes },"loads a new focus tree for the current scope, retaining any shared focuses.",,1.5,country
unlock_national_focus,<focus> the focus to unlock.,unlock_national_focus = my_focus,bypasses the specified focus for the current scope (marks as complete without firing complete_effect of the focus).,,1,country
complete_national_focus,<focus> the focus to complete.,complete_national_focus = my_focus,completes the specified focus for the current scope.,,1,country
activate_decision,<decision> the decision to activate.,activate_decision = my_decision,"activates the specified decision for the current scope, ignoring triggers for the decision.",decisions are found in /hearts of iron iv/common/decisions/*.txt,1,country
activate_targeted_decision,target = <scope> the country to target. decision = <decision> the decision to activate.,activate_targeted_decision = {     target = ger     decision = my_decision },activates the specified targeted decision for the specified target for the current scope.,decisions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
remove_targeted_decision,<decision> the decision to remove.,remove_targeted_decision = {     target = from     decision = my_decision },removes the specified targeted decision for the current scope.,decisions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
unlock_decision_tooltip,<decision> the decision to display.,unlock_decision_tooltip = my_decision,displays a special tooltip for the specified decision in the effect tooltip.,decisions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
unlock_decision_category_tooltip,<category> the decision category to display.,unlock_decision_category_tooltip = my_category,displays a special tooltip for the specified decision category in the effect tooltip.,decision categories are found in /hearts of iron iv/common/decisions/catergories/*.txt,1.5,country
activate_mission,<mission> the mission to activate.,activate_mission = my_mission,"activates the specified mission for the current scope, ignoring any triggers for the decision.",missions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
activate_mission_tooltip,<mission> the mission to display.,activate_mission_tooltip = my_mission,displays a special tooltip for the specified mission in the effect tooltip.,missions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
remove_mission,<mission> the mission to remove.,remove_mission = my_mission,removes the specified mission for the current scope.,missions are found in /hearts of iron iv/common/decisions/*.txt,1.5,country
add_research_slot,<int> the number of slots to add or remove.,add_research_slot = 1,adjusts the number of research slots the current scope has. can remove slots.,,1,country
set_research_slots,<int> the number of slots to set.,set_research_slots = 4,sets the number of research slots the current scope has.,,1,country
add_tech_bonus,bonus = <float> the bonus to technology given. uses = <int> the amount of times the bonus can be used. ahead_reduction = <float> the cost reduction if ahead of time. category = <string> which technology category the bonus applies to. multiple can be defined. technology = <string> which technology the bonus applies to. multiple can be defined.,add_tech_bonus = {     bonus = 0.5     uses = 1     category = radar_tech },grants a research bonus to the current scope with the specified parameters.,,1,country
set_technology,<technology> = <int> the technology to add.popup = no to not show the popup after adding technology,set_technology = {     suicide_craft = 1 },grants the specified technology to the current scope.,"a value of 1 sets the technology. a value of 0 removes the technology, but if it is a researchable technology, the duration to research isn't reset, meaning it can be researched in 1 day.",1,country
add_to_tech_sharing_group,<string> the group to add the current scope to.,add_to_tech_sharing_group = us_research,adds the current scope to the specified technology sharing group.,,1.3,country
remove_from_tech_sharing_group,<string> the group to remove the current scope from.,remove_from_tech_sharing_group = us_research,removes the current scope from the specified technology sharing group.,,1.3,country
modify_tech_sharing_bonus,id = <string> the group to modify. bonus = <float> the new bonus.,modify_tech_sharing_bonus = {     id = us_research     bonus = 0.5 },modifies the specified technology sharing group.,,1.3,country
add_ideas,<idea> the idea to add.,add_ideas = my_idea add_ideas = {     my_idea_1     my_idea_2 },adds the specified ideas to the current scope.,can be used as a scope to add multiple at once.,1,country
add_timed_idea,idea = <idea> the idea to add. days = <int> / <variable> the number of days to add the idea for.,add_timed_idea = {     idea = my_idea     days = 180 },adds the specified ideas to the current scope for the specified number of days.,,1,country
modify_timed_idea,idea = <idea> the idea to modify. days = <int> / <variable> the number of days to add to the idea.,modify_timed_idea = {     idea = my_idea     days = 60 },extends the duration of the timed idea by the specified amount.,,1,country
swap_ideas,add_idea = <idea> the idea to add. remove_idea = <idea> the idea to remove.,swap_ideas = {     remove_idea = my_idea_1     add_idea = my_idea_2 },switches two ideas with a tooltip displaying any modifier differences between them.,,1.3,country
remove_ideas,<idea> the idea to remove.,remove_ideas = my_idea remove_ideas = {     my_idea_1     my_idea_2 },removes the specified idea from the current scope.,can be used as a scope to remove multiple at once.,1,country
remove_ideas_with_trait,<trait> the trait to target.,remove_ideas_with_trait = motorized_equipment_manufacturer,removes all ideas for the current scope that use the specified trait.,,1,country
show_ideas_tooltip,<idea> the idea to display.,show_ideas_tooltip = my_idea,displays the specified idea in the tooltip for the current effect scope. does not add the idea.,,1,country
load_oob,<oob> the oob to load.,"load_oob = ""ger_default""","loads the specified oob for the current scope, applying the effects within.",,1,country
division_template,name the name of the division. regiments = {     <unit> = { x = 0 y = 0 } } support = {     <unit> = { x = 0 y = 0 } }  the composition of the division.,"division_template = {     name = ""test""     regiments = {         infantry = { x = 0 y = 0 }         infantry = { x = 0 y = 1 }         infantry = { x = 0 y = 2 }         infantry = { x = 0 y = 3 }     }     support = {          military_police = { x = 0 y = 0 }     }  }",creates and adds the specified division template to the current scope.,the x and y attributes represent the rows and columns in the division designer.,1,country
set_division_template_lock,division_template = <string> the name of the division template. is_locked = <bool> whether the division is locked or not.,"set_division_template_lock = {     division_template = ""infantry division""     is_locked = yes }","toggles the locked status on a division template for the current scope, which prevents editing or deletion.",,1.5,country
delete_unit_template_and_units,division_template = <string> the name of the division template.,"delete_unit_template_and_units = {     division_template = ""infantry division"" }",deletes the specified division template and all units using it for the current scope.,,1.5,country
set_equipment_fraction,<float> / <variable> the fraction of equipment to remove.,set_equipment_fraction = 0.5,reduces the overall equipment stockpile by the specified fraction.,this should not be used in civil wars to simulate stockpile splitting. start_civil_war now automatically divides stockpiles according to the respective size.,1,country
add_equipment_to_stockpile,type = <equipment> the equipment to add. can be archetype. amount = <int> the amount to add. producer = <scope> defines who produced the equipment. optional.,add_equipment_to_stockpile = {     type = infantry_equipment     amount = 100     producer = ger },adds the specified equipment to the current scope.,note that removal will only remove equipment with the same producer defined in the effect.,1,country
send_equipment,type = <equipment> the equipment to add. can be archetype. amount = <int> / <variable> the amount to add. target = <scope> / <variable> which country receives the equipment.,send_equipment = {     equipment = infantry_equipment     amount = 100     target = ger },"sends the specified amount of equipment to the specified target, removing said equipment from the current scope.",,1,country
create_production_license,target = <scope> which country receives the license. cost_factor = <float> modifies the production cost. equipment scope type = <equipment> the equipment the country is licensed to produce. must be an non-archetype equipment.,create_production_license = {     target = hun     equipment = {         type = fighter_equipment_1     }     cost_factor = 0 },grants the specified country a licensed to produce the specified equipment from the current scope.,,1.4,country
create_equipment_variant,name = <string> the name of the variant type = <equipment> the equipment the variant is of. parent_version = <int> ordering for multiple variants. upgrade scope <upgrade> = <amount> the upgrades configuration for the variant.,"create_equipment_variant = {      name = ""montecuccoli class""      type = light_cruiser_1      upgrades = {          ship_reliability_upgrade = 3          ship_engine_upgrade = 3          ship_gun_upgrade = 3          ship_anti_air_upgrade = 3      } }",creates the specified equipment variant for the current scope.,,1,country
add_equipment_production,amount = <int> the amount to produce. optional. requested_factories = <int> the number of factories to assigned initially. optional. progress = <float> the initial production progress. optional. efficiency = <float> the initial production efficiency. optional. equipment scope type = <equipment> the name of the equipment to produce. creator = <scope> the country which is producing the equipment. used if root scope isn't producer. optional. version_name = <string>the name of the variant to produce. optional.,add_equipment_production = {     equipment = {         type = light_cruiser_2     }     requested_factories = 1     progress = 0.95     amount = 1 },starts a production line for the specified equipment for the current scope.,,1,country
add_manpower,<int> / <variable> the amount to add.,add_manpower = 100000 add_manpower = var:my_var,adds the specified amount of manpower to the current scope.,,1,country
army_experience,<float> / <variable> the amount to add.,army_experience = 10,adds the specified amount of army experience to the current scope.,,1,country
create_corps_commander,name = <string> the name of the leader. picture = <string> the graphical reference of the picture of the leader. skill = <int> the skill of the leader. attack_skill = <int> the attack skill of the leader. defense_skill = <int> the defense skill of the leader. planning_skill = <int> the planning skill of the leader. logistics_skill = <int> the logistics skill of the leader. traits = { <trait> } the traits the leader spawns with. female = <bool> the gender of the leader.,"create_corps_commander = { 	name = ""jean de lattre de tassigny"" 	picture = ""portrait_france_jean_de_lattre_de_tassigny.dds"" 	traits = { trickster brilliant_strategist } 	skill = 4 	attack_skill = 4 	defense_skill = 2 	planning_skill = 4 	logistics_skill = 3 }",creates a commander for the current scope with the specified attributes.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1,country
create_field_marshal,name = <string> the name of the leader. picture = <string> the graphical reference of the picture of the leader. skill = <int> the skill of the leader. attack_skill = <int> the attack skill of the leader. defense_skill = <int> the defense skill of the leader. planning_skill = <int> the planning skill of the leader. logistics_skill = <int> the logistics skill of the leader. traits = { <trait> } the traits the leader spawns with.,"create_field_marshal = { 	name = ""maurice gamelin"" 	picture = ""portrait_france_maurice_gamelin.dds"" 	traits = { defensive_doctrine } 	skill = 2 	attack_skill = 1 	defense_skill = 3 	planning_skill = 2 	logistics_skill = 1 }",creates a field marshal for the current scope with the specified attributes.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1,country
navy_experience,<float> / <variable> the amount to add.,navy_experience = 10,adds the specified amount of navy experience to the current scope.,,1,country
destroy_ships,type = <ship> the type of ship to destroy. count = <int> or all the amount to destroy.,destroy_ships = {     type = destroyer     count = all },destroys the specified type and amount of ships controlled by the current scope.,,1.5,country
transfer_navy,target = <scope> the target country.,transfer_navy = {     target = ger },transfers the current scope navy to the specified country.,,1.5,country
transfer_ship,type = <ship> the type of ship to transfer.<br target = <scope> the target country. prefer_name = <string> the new name for the ships in the target country. optional.,"transfer_ship = {     prefer_name = ""hms achilles""     type = light_cruiser     target = nzl }",transfers the specified type of ship from the current scope to the specified country.,,1.4,country
create_navy_leader,name = <string> the name of the leader. picture = <string> the graphical reference of the picture of the leader. skill = <int> the skill of the leader. traits = { <trait> } the traits the leader spawns with.,"create_navy_leader = { 	name = ""francois darlan""     picture = ""portrait_france_francois_darlan.dds"" 	traits = { superior_tactician } 	skill = 3 }",creates a naval leader for the current scope with the specified attributes.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1,country
air_experience,<float> / <variable> the amount to add.,air_experience = 10,adds the specified amount of air experience to the current scope.,,1,country
add_ace,name = <string> the name of the ace. surname = <string> the surname of the ace. callsign = <string> the callsign of the ace. type = <type> the ace type. is_female = <bool> the gender of the ace.,"add_ace = {     name = ""amelia""     surname = ""earhart""     callsign = ""revenant""     type = fighter_genius     is_female = yes }",adds an ace for the current scope.,ace types found in /hearts of iron iv/common/aces/*.txt.,1,country
add_ai_strategy,type = <type> the type of strategy. id = <scope> what country the strategy is against. value = <int> the weighting added by the strategy.,add_ai_strategy = {     type = alliance     id = ger     value = 200 },sets an ai strategy for the current scope.,see ai modding for more details.,1,country
state_event,"id = <event> the event to fire. days = <event> / <variable> fires the event in the specified number of days. optional. hours = <event> / <variable> fires the event in the specified number of hours. optional. random = <event> adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. optional. trigger_for = <scope> fires event in the specified scope.",state_event = {     id = my_event.1     days = 10     random = 50     trigger_for = controller },fires the specified event for the current state.,where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events. using days = <event> / <variable> or hours may still be bugged and will not fire the event.,1,state
set_state_flag,<flag> an unique string to identify the state flag with.,set_state_flag = my_flag,defines a state flag.,,1,state
clr_state_flag,<flag> the unique string of a state flag to clear.,clr_state_flag = my_flag,clears a defined state flag.,,1,state
modify_state_flag,flag = <flag> the state flag to modify. value = <value> the value to set it to: 0 or 1,modify_state_flag = {     flag = my_flag     value = 1 },modifies a state flag.,use variables instead.,1.3,state
set_state_name,<string> defines the new name.,"set_state_name = ""funland""",changes the current state's name to the specified name.,,1.3,state
reset_state_name,<bool> boolean.,reset_state_name = yes,resets any changes to the current state's name.,,1.3,state
add_claim_by,<scope> / <variable> the country to add the claim for.,add_claim_by = sov,adds a claim for the specified country on the current scope.,,1,state
remove_claim_by,<scope> / <variable> the country to remove the claim for.,remove_claim_by = sov,removes a claim by the specified country on the current scope.,,1,state
add_core_of,<scope> / <variable> the country to add the core for.,add_core_of = sov,adds a core for the specified country on the current scope.,,1,state
remove_core_of,<scope> / <variable> the country to remove the core for.,remove_core_of = sov,removes a core for the specified country on the current scope.,,1,state
set_demilitarized_zone,<bool> boolean.,set_demilitarized_zone = yes,makes the current scope a demilitarized zone.,,1,state
set_state_category,<category> the category to change to.,set_state_category = rural,changes the current state category to the specified category.,categories are found in /hearts of iron iv/common/state_category/*.txt,1.3,state
add_state_modifier,modifier scope <modifier> = <float> adds a modifier to the state.,add_state_modifier = {     modifier = {         local_resources = 2.0     } },adds a modifier to the current state.,,1.3,state
add_manpower,<int> / <variable> the amount to add.,add_manpower = 10000,adds the specified amount of manpower to the current state.,,1,state
add_resource,type = <resource> the resource to add. amount = <int> / <variable> the amount to add.,add_resource = {     type = oil     amount = 100 },adds the specified resource in the specified amount to the current state.,,1,state
set_border_war,<bool> boolean.,set_border_war = yes,enables border war status for the current state.,,1,state
create_unit,division = <division string> the division string. owner = <scope> the owner of the division. prioritize_location = <province> prioritize the specified province in the state.,"create_unit = {     division = ""name = \""infantry division\"" division_template = \""infantry division\"" start_experience_factor = 0.5 start_equipment_factor = 0.5""     owner = ger }",adds the specified division to the current state.,the division string must be formatted as it is seen in the examples.,1.3,state
add_building_construction,"type = <string> the building to add. level = <int> / <variable> the level to set the building to. instant_build = <bool> defines whether the buildings are instantly built. province = <id> defines the exact province to add provincal buildings in. can be used as a scope. province scope all_provinces = <bool> affect all provinces. used in the province scope. limit_to_coastal = <bool> affect coastal provinces. used in the province scope. limit_to_naval_base = <bool> affect naval base provinces. used in the province scope. limit_to_border = <bool> affect border provinces. used in the province scope. level = <int> affect only provinces with buildings level below, at or above the specified level. used in the province scope. id = <id> affect the specified province. used in the province scope.",add_building_construction = {     type = arms_factory     level = 5     instant_build = yes }  add_building_construction = {     type = bunker     level = 10     instant_build = yes     province = {         all_provinces = yes         limit_to_border = yes     } }  add_building_construction = {     type = bunker     level = 1     instant_build = yes     province = 2999 },starts construction in the current state for the specified building.,,1,state
set_building_level,"type = <string> the building to add. level = <int> / <variable> the level to set the building to. instant_build = <bool> defines whether the buildings are instantly built. province = <id> defines the exact province to add provincal buildings in. can be used as a scope. province scope all_provinces = <bool> affect all provinces. used in the province scope. limit_to_coastal = <bool> affect coastal provinces. used in the province scope. limit_to_naval_base = <bool> affect naval base provinces. used in the province scope. limit_to_border = <bool> affect border provinces. used in the province scope. level = <int> affect only provinces with buildings level below, at or above the specified level. used in the province scope. id = <id> affect the specified province. used in the province scope.",set_building_level = {     type = infrastructure     level = 10     instant_build = yes }  set_building_level = {     type = bunker     level = 3     province = {         all_provinces = yes         limit_to_border = yes         level < 3     } },sets the specified building to the current state (or provinces within the state).,the province scope is used for provincal level buildings.,1.4,state
damage_building,type = <building> the building to damage. damage = <float> the amount of damage to inflict. province = <id> the province to target for provincal buildings.,damage_building = {     type = infrastructure     damage = 1 },damages the specified building in the current state.,the health of buildings is determined by the value attribute in a building's definition. this is multiplied by their level to get their total health.,1.3,state
remove_building,type = <building> the building to remove. level = <int> / <variable> the levels to remove.,remove_building = {     type = arms_factory     level = 5 },"removes the specified building in the current state. for shared buildings level determines the amount, whereas for the others it is the actual level.",,1,state
add_extra_state_shared_building_slots,<int> / <variable> the amount of slots to add or remove.,add_extra_state_shared_building_slots = 2,adjusts the number of shared building slots for the current state.,,1,state
unit_leader_event,"id = <event> the event to fire. days = <event> / <variable> fires the event in the specified number of days. optional. hours = <event> / <variable> fires the event in the specified number of hours. optional. random = <event> adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. optional.",unit_leader_event = {     id = my_event.1     days = 10     random = 50 },fires the specified event for the owner of the current unit leader.,uses a special interface displaying the current unit leader portrait. where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1.5,unit leader
set_unit_leader_flag,<flag> an unique string to identify the unit leader flag with.,set_unit_leader_flag = my_flag,defines a unit leader flag.,,1.5,unit leader
clr_unit_leader_flag,<flag> the unique string of a unit leader flag to clear.,clr_unit_leader_flag = my_flag,clears a defined unit leader flag.,,1.5,unit leader
modify_unit_leader_flag,flag = <flag> the unit leader flag to modify. value = <value> the value to set it to: 0 or 1,modify_unit_leader_flag = {     flag = my_flag     value = 1 },modifies a unit leader flag.,,1.5,unit leader
promote_leader,<bool> boolean,promote_leader = yes,promotes the current unit leader to field marshal (if commander.,,1.5,unit leader
demote_leader,<bool> boolean,demote_leader = yes,demotes the current unit leader to commander (if field marshal).,,1.5,unit leader
retire,<bool> boolean>,retire = yes,retires the current unit leader (removing them).,,1.5,unit leader
remove_unit_leader,<id> the id of the unit leader.,remove_unit_leader = 70,removes the specified unit leader by their id.,,1,unit leader
set_nationality,<scope> / <variable> the target country.,set_nationality = ger,"switches the current unit leader to the specified country, giving them the leader.",,1.5,unit leader
add_unit_leader_trait,<trait> the trait to add.,add_unit_leader_trait = old_guard,adds the specified trait to the current unit leader.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1,unit leader
remove_unit_leader_trait,<trait> the trait to remove.,remove_unit_leader_trait = old_guard,removes the specified trait from the current unit leader.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1,unit leader
add_timed_unit_leader_trait,<trait> the trait to add. days = <int> the duration of the trait.,add_timed_unit_leader_trait = {     trait = wounded     days = 90 },adds the specified trait to the current unit leader for the specified duration.,traits are found in /hearts of iron iv/common/unit_leader/*.txt.,1.5,unit leader
supply_units,<int> / <variable> the amount of hours of supply.,supply_units = 24,adds the specified amount of hours of supply to troops led by the current unit leader.,,1.5,unit leader
add_max_trait,<int> the amount to add.,add_max_trait = 1,adds the specified amount of assignable trait slots to the current unit leader.,,1.5,unit leader
add_skill_level,<int> the skill to add.,add_skill_level = 1,adds skill to the current unit leader.,,1.5,unit leader
add_logistics,<int> the skill to add.,add_logistics = 1,adds logistics skill to the current unit leader.,,1.5,unit leader
add_planning,<int> the skill to add.,add_planning = 1,adds planning skill to the current unit leader.,,1.5,unit leader
add_defense,<int> the skill to add.,add_defense = 1,adds defense skill to the current unit leader.,,1.5,unit leader
add_attack,<int> the skill to add.,add_attack = 1,adds attack skill to the current unit leader.,,1.5,unit leader
add_temporary_buff_to_units,combat_offense = <float> the bonus to grant. optional. combat_breakthrough = <float> the bonus to grant. optional. combat_defense = <float> the bonus to grant. optional. combat_entrenchment = <float> the bonus to grant. optional. org_damage_multiplier = <float> the bonus to grant. optional. str_damage_multiplier = <float> the bonus to grant. optional. war_support_reduction_on_damage = <float> the bonus to grant. optional. cannot_retreat_while_attacking = <float> the bonus to grant. optional. cannot_retreat_while_defending = <float> the bonus to grant. optional. days = <int> the duration of the buff. optional. tooltip = <string> the tooltip to display for the buff.,"add_temporary_buff_to_units = {     combat_offense = 0.25     combat_breakthrough = 0.25     org_damage_multiplier = -1.0     str_damage_multiplier = 0.25     war_support_reduction_on_damage = 0.2     cannot_retreat_while_attacking = 1.0 				     days = 7     tooltip = ability_force_attack_tooltip }",adds the specified combat buff to the current unit leader.,,1.5,unit leader
boost_planning,<float> the amount to add.,boost_planning = 1,improves the planning of units controlled by the current unit leader.,,1.5,unit leader
