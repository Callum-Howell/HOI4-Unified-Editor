name,parameters,example,description,notes,version,scope
remove_decision,Allows to remove specified decision without running remove_effect.,remove_decision = GER_MEPO,Removes a decision.,,1.6,country
swap_ruler_traits,Similar to swap_ideas. Removes one trait and adds another.,swap_ruler_traits = { remove = <trait> add = <trait> },Swaps traits.,,1.6,country
remove_exile_tag,"Remove the exile tag on a army leader, making them no longer be considered exile leaders.","remove_exile_tag = { USA = ""Arturo Rawson"" }",Removes a leaders exile tag.,,1.6,unit leader
add_legitimacy,Adds legitimacy to a government in exile.,add_legitimacy = 10,Adds legitimacy.,,1.6,country
set_legitimacy,Sets the legitimacy of governments in exile.,set_legitimacy= { POL = 1.0 },Sets legitimacy.,,1.6,country
become_exiled_in,"Makes a country a government in exile in a set country, with a set starting legitimacy.",become_exiled_in = { target = <Host tag> legitimacy = <0-1> starting legitimacy },Creates a government in exile.,"Must be fired from ROOT, the country that should be exiled, or a TAG specification must be used.",1.6,country
end_exile,Ends a government in exile.,end_exile,Ends a government in exile.,,1.6,country
add_province_modifier,Adds a province modifier.,add_province_modifier = { 5246 = mud },Adds a province modifier.,"New modifiers can be created in the ""weather.txt"" file.",1.6,state
remove_province_modifier,Removes a province modifier.,remove_province_modifier = { 5246 = mud },Removes a province modifier.,"New modifiers can be created in the ""weather.txt"" file.",1.6,state
set_faction_name,Sets a faction name as the loc name.,set_faction_name = SOME_LOC_KEY,Changes faction names.,,1.6,state
add_nuclear_bombs,Adds nuclear bomb to TAG's stockpile.,add_nuclear_bombs = 100,Adds specified number of nukes to the country's stockpile,Needs the Nuke tech to use.,1.6,country
launch_nuke,Nukes a province.,launch_nuke = {??? province = 42 ??? state = 42??? controller = GER ??? use_nuke = yes },"Nukes a province. When using state it nukes a random province in said state, with a preference to enemy occupied provinces.",Requires Nuke tech and nukes. Removes a nuke from stockpile when used.,1.6,state
inherit_technology,Transfers all of a nations techs to a specified tag.,inherit_technology = CAN,Transfers tech.,Useful in civil wars and when countries split. The scoped country inherits the techs from the targeted TAG so be careful with the scope.,1.6,country
set_fuel_ratio,Set country's current fuel ratio relative to its capacity.,set_fuel_ratio,Sets country's current fuel ratio.,,1.6,country
add_mines,Add mines to a strategic region for the current country.,add_mines = { region = 42 amount = 100 },Add mines to a strategic region.,,1.6,country
give_resource_rights,Gives resource rights,give_resource_rights = { receiver = ENG state = 291 },Gives all the resources of a state to the target country,see 04_mtg_on_actions,1.6,country
remove_resource_rights,Removes resource rights,ENG = { remove_resource_rights = 477 },Removes given resource rights,,1.6,country
set_global_flag,<flag>An unique string to identify the global flag with.,set_global_flag = my_flag,Defines a global flag.,,1,any
clr_global_flag,<flag>The unique string of a global flag to clear.,clr_global_flag = my_flag,Clears a defined global flag.,,1,any
modify_global_flag,flag = <flag>The global flag to modify. value = <value>The value to set it to: 0 or 1,modify_global_flag = {     flag = my_flag     value = 1 },Modifies a global flag.,Use variables instead.,1,any
custom_effect_tooltip,<string>An localized string to display in the tooltip.,custom_effect_tooltip = my_tooltip_tt,Displays a localized key in the effect tooltip.,,1,any
log,<string>An string to in the game.log,"log = ""myVariable: [?myVariable]""",Displays a string in the game.log when executed.,"Accepts all localization commands (i.e. [Root.GetName], etc)",1.5,any
save_event_target_as,<string>An unique string to identify the event target with.,capital_scope = {     save_event_target_as = my_state },Saves the current scope as a key. Is cleared once execution ends (i.e. end of event).,Use event_target:<key> to access the scope.Do not use in Scripted GUIs.,1,any
save_global_event_target_as,<string>An unique string to identify the global event target with.,random_other_country = {     save_global_event_target_as = my_country },Saves the current scope as a key. Persists after execution until cleared via effect.,Use event_target:<key> to access the scope.Do not use in Scripted GUIs.,1,any
clear_global_event_target,<string>The unique string of the global event target to clear.,clear_global_event_target = my_country,Clears a specific global event target.,,1,any
clear_global_event_targets,yesBoolean.,clear_global_event_targets = yes,Clears all global event targets.,,1,any
break,None,break,Stops execution of effects in current scope.,,1,any
sound_effect,<string>A sound reference from an .asset file.,"sound_effect = ""boom""",Plays the specified sound once.,,1,any
randomize_weather,<int>A seed integer.,randomize_weather = 12345,Randomizes the weather with the specified seed.,,1,any
set_province_name,id = <id>The id of the province to be changed. name = <string>The name to change the province to.,"set_province_name = {     id = 325     name = ""Funland"" }",Changes the specified province's name to the specified name.,,1.3,any
reset_province_name,<id>The id of the province to reset.,reset_province_name = 325,Resets the specified province's name.,,1.3,any
goto_province,<id>The id of the province go to.,goto_province = 325,Moves the camera position over the specified province.,,1,any
goto_state,<scope> / <variable>The id of the state go to.,goto_state = 1  goto_state = var:some_state,Moves the camera position over the specified state.,,1,any
change_tag_from,<scope> / <variable>The country to change from.,GER = { change_tag_from = ROOT }  GER = { change_tag_from = var:from.country },Changes the player to the current scope from the target scope.,The country the player becomes needs to be the scope in which the command is used.,1,any
start_border_war,change_state_after_war = <bool> Whether the state changes hands after the war. Attacker scope state = <id> / <variable> The attacker state. num_provinces = <id> The number of provinces used in the state. on_win = <id> The event to fire for the attacker on a win. on_lose = <id> The event to fire for the attacker on a loss. on_cancel= <id> The event to fire for the attacker on a draw. Defender scope state = <id> / <variable> The defender state. num_provinces = <id> The number of provinces used in the state. on_win = <id> The event to fire for the defender on a win. on_lose = <id> The event to fire for the defender on a loss. on_cancel= <id> The event to fire for the defender on a draw.,"start_border_war = {     change_state_after_war = no     attacker = {         state = 527         num_provinces = 4         on_win = japan_border_conflict.2         on_lose = japan_border_conflict.3         on_cancel = japan_border_conflict.4     } 				     defender = {         state = 408         num_provinces = 4         on_win = japan_border_conflict.3         on_lose = japan_border_conflict.2         on_cancel = japan_border_conflict.4     } }",Starts a border war for the specified attacker and defender. The participating countries are the owners of the specified states.,,1.5,country
set_border_war_data,attacker = <id> / <variable> The attacker state. defender = <id> / <variable> The defender state. attacker_modifier = <id> / <variable> The modifier applied to attacker strength. defender_modifier = <id> / <variable> The modifier applied to attacker strength. combat_width = <id> / <variable> The combat width used in the border war battle.,set_border_war_data = {     attacker = 527     defender = 408     defender_modifier = 0.15     combat_width = 100 },Sets the bonuses or penalties for the attacker and defender in an on-going border war. Used after start_border_war.,,1.5,country
cancel_border_war,attacker = <id> / <variable> The attacker state. defender = <id> / <variable> The defender state. dont_fire_events = <bool> Stops the events from start_border_war from firing.,cancel_border_war = {     dont_fire_events = yes     defender = 408     attacker = 527 },Cancels an on-going border war without a winner.,,1.5,country
finalize_border_war,attacker = <id> / <variable> The attacker state. defender = <id> / <variable> The defender state. attacker_win = <bool> Makes the attacker the winner. defender_win = <bool> Makes the defender the winner.,finalize_border_war = {     attacker_win = yes     attacker = 527     defender = 408 },Ends an on-going border war.,,1.5,country
set_country_flag,<flag> An unique string to identify the country flag with.,set_country_flag = my_flag,Defines a country flag.,,1,country
clr_country_flag,<flag> The unique string of a country flag to clear.,clr_country_flag = my_flag,Clears a defined country flag.,,1,country
modify_country_flag,flag = <flag> The country flag to modify. value = <value> The value to set it to: 0 or 1,modify_country_flag = {     flag = my_flag     value = 1 },Modifies a country flag.,Use variables instead.,1.3,country
country_event,"id = <event> The event to fire. days = <event> / <variable> Fires the event in the specified number of days. Optional. hours = <event> / <variable> Fires the event in the specified number of hours. Optional. random = <event> Adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. Optional.",country_event = {     id = my_event.1     days = 10     random = 50 },Fires the specified event for the current country.,Where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1,country
news_event,"id = <event> The event to fire. days = <event> / <variable> Fires the event in the specified number of days. Optional. hours = <event> / <variable> Fires the event in the specified number of hours. Optional. random = <event> Adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. Optional.",news_event = {     id = my_event.1     days = 10     random = 50 },Fires the specified news event for the current country.,The news event uses a different interface to the country event. Where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1,country
set_cosmetic_tag,<string> The cosmetic tag to switch to.,set_cosmetic_tag = SAF_SOV_communism,"Makes the current scope use the specified cosmetic tag, changing name and flag.",,1.3,country
drop_cosmetic_tag,<bool> Boolean.,drop_cosmetic_tag = yes,Makes the current scope drop the current cosmetic tag they are using.,,1.3,country
set_rule,<rule> Boolean.,set_rule = {     can_create_factions = yes },Toggles the special game rules for the current scope.,Possible rules: can_be_called_to_war can_boost_other_ideologies can_create_factions can_declare_war_on_same_ideology can_declare_war_without_wargoal_when_in_war can_decline_call_to_war can_force_government can_generate_female_aces can_guarantee_other_ideologies can_join_factions can_join_factions_not_allowed_diplomacy can_join_opposite_factions can_lower_tension can_not_declare_war can_occupy_non_war can_only_justify_war_on_threat_country can_use_kamikaze_pilots units_deployed_to_overlord (subjects only),1,country
add_threat,<int> The amount to change by.,add_threat = 10,Adjusts the level of World Tension.,,1,country
add_named_threat,threat = <int> The amount to change by. name = <string> The localization string.,add_named_threat = {      threat = 5      name = GER_rhineland },Adjusts the level of World Tension and adds an entry in the World Tension tooltip.,,1,country
annex_country,target = <scope> Which country to annex. transfer_troops = yes Whether to transfer the troops of the annexed country.,annex_country = {     target = GER     transfer_troops = yes },Annex the specified country for the current scope.,,1,country
add_to_war,targeted_alliance = <scope> The country to assist. enemy = <scope> The country attacking the ally. hostility_reason = <string> Localization for the reason for joining. Optional.,add_to_war = {      targeted_alliance = PREV      enemy = HUN      hostility_reason = asked_to_join },Adds the current scope into the war of their ally against the specified enemy.,,1,country
declare_war_on,target = <scope> / <variable> The country to attack. type = <wargoal> The wargoal to declare with.,declare_war_on = {     target = GER     type = annex_everything },Makes the current scope declare war on the specified country with the specified wargoal.,Wargoals are found in /Hearts of Iron IV/common/wargoals/*.txt.,1,country
white_peace,<scope> / <variable> The scope to white peace. <message> The reason for peace.,white_peace = GER  white_peace = {     tag = GER     message = EXAMPLE },Makes the current scope white peace the specified scope.,,1,country
set_truce,target = <scope> The scope to truce with. days = <int> The duration of the truce.,set_truce = {     target = GER     days = 90 },Makes the current scope truce with the specified scope.,,1,country
create_wargoal,target = <scope> / <variable> The country to target. type = <wargoal> The wargoal to generate. generator = { <state id> } The states to supply the wargoal (i.e. take_state_focus).,create_wargoal = {     type = puppet_wargoal_focus     target = ROOT },Grants the current scope a wargoal against the specified country.,,1,country
start_civil_war,ideology = <ideology> The ideology of the breakaway country. ruling_party = <ideology> The ruling party of the original country. Optional. size = <float> The size of the breakaway country and the fraction of the original stockpile and military units it will receive. Optional. capital = <state> The capital of the breakaway country. Optional. only_own_territory = <bool> Limits the breakaway country to only own territory. Optional. states = { <state> } The states included in the breakway country. Optional. states_filter = { <triggers> } Filters to apply to the state assignment for the breakaway country. Optional. keep_unit_leaders = { <unit leader id> } Keep the specified leaders. Optional. keep_unit_leaders_trigger = { <triggers> Keep the specified leaders that meet the triggers. Optional.,start_civil_war = {     ruling_party = communism     ideology = ROOT     size = 0.8     only_own_territory = no     capital = 282     states = {          282 533 536 555 529 530 528      }     keep_unit_leaders = {         750 751 752     } },Starts a civil war for the current scope with the specified parameters.,,1,country
add_resource,type = <resource> The resource to add. amount = <int> The amount of resource to add. state = <id>Which state to add the resource to.,add_resource = {     type = oil     amount = 50     state = 88 },Adds the specified resource in the specified amount to the specified state.,,1,country
create_import,resource = <resource> The resource to import. amount = <int> The amount of resource to import. exporter = <id>Which country exports the resource.,create_import = {     resource = steel     amount = 100     exporter = GER },Creates an import for the current scope with the specified resource and from the specified exporter.,,1,country
add_offsite_building,type = <building> The building to add. level = <level> / <variable> The maximum level to add.,add_offsite_building = { type = arms_factory level = 1 },Adds an off-map building for the current scope that produces its effects without being present in a state.,,1.5,country
modify_building_resources,building = <building> The building to modify. resource = <resource> The resource to add. amount = <amount> The amount of resource to add.,modify_building_resources = {     building = synthetic_refinery     resource = oil     amount = 1 },Modifies the resource output of the specified building for the current scope.,,1.5,country
load_focus_tree,"<string> The focus tree to load.Alternatively, as an effect block:tree = <string>keep_completed = yes/no",load_focus_tree = china_communist_focusload_focus_tree = { tree = british_focus keep_completed = yes },"Loads a new focus tree for the current scope, retaining any shared focuses.",,1.5,country
unlock_national_focus,<focus> The focus to unlock.,unlock_national_focus = my_focus,Bypasses the specified focus for the current scope (marks as complete without firing complete_effect of the focus).,,1,country
complete_national_focus,<focus> The focus to complete.,complete_national_focus = my_focus,Completes the specified focus for the current scope.,,1,country
activate_decision,<decision> The decision to activate.,activate_decision = my_decision,"Activates the specified decision for the current scope, ignoring triggers for the decision.",Decisions are found in /Hearts of Iron IV/common/decisions/*.txt,1,country
activate_targeted_decision,target = <scope> The country to target. decision = <decision> The decision to activate.,activate_targeted_decision = {     target = GER     decision = my_decision },Activates the specified targeted decision for the specified target for the current scope.,Decisions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
remove_targeted_decision,<decision> The decision to remove.,remove_targeted_decision = {     target = FROM     decision = my_decision },Removes the specified targeted decision for the current scope.,Decisions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
unlock_decision_tooltip,<decision> The decision to display.,unlock_decision_tooltip = my_decision,Displays a special tooltip for the specified decision in the effect tooltip.,Decisions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
unlock_decision_category_tooltip,<category> The decision category to display.,unlock_decision_category_tooltip = my_category,Displays a special tooltip for the specified decision category in the effect tooltip.,Decision categories are found in /Hearts of Iron IV/common/decisions/catergories/*.txt,1.5,country
activate_mission,<mission> The mission to activate.,activate_mission = my_mission,"Activates the specified mission for the current scope, ignoring any triggers for the decision.",Missions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
activate_mission_tooltip,<mission> The mission to display.,activate_mission_tooltip = my_mission,Displays a special tooltip for the specified mission in the effect tooltip.,Missions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
remove_mission,<mission> The mission to remove.,remove_mission = my_mission,Removes the specified mission for the current scope.,Missions are found in /Hearts of Iron IV/common/decisions/*.txt,1.5,country
add_research_slot,<int> The number of slots to add or remove.,add_research_slot = 1,Adjusts the number of research slots the current scope has. Can remove slots.,,1,country
set_research_slots,<int> The number of slots to set.,set_research_slots = 4,Sets the number of research slots the current scope has.,,1,country
add_tech_bonus,bonus = <float> The bonus to technology given. uses = <int> The amount of times the bonus can be used. ahead_reduction = <float> The cost reduction if ahead of time. category = <string> Which technology category the bonus applies to. Multiple can be defined. technology = <string> Which technology the bonus applies to. Multiple can be defined.,add_tech_bonus = {     bonus = 0.5     uses = 1     category = radar_tech },Grants a research bonus to the current scope with the specified parameters.,,1,country
set_technology,<technology> = <int> The technology to add.popup = no To not show the popup after adding technology,set_technology = {     suicide_craft = 1 },Grants the specified technology to the current scope.,"A value of 1 sets the technology. A value of 0 removes the technology, but if it is a researchable technology, the duration to research isn't reset, meaning it can be researched in 1 day.",1,country
add_to_tech_sharing_group,<string> The group to add the current scope to.,add_to_tech_sharing_group = us_research,Adds the current scope to the specified technology sharing group.,,1.3,country
remove_from_tech_sharing_group,<string> The group to remove the current scope from.,remove_from_tech_sharing_group = us_research,Removes the current scope from the specified technology sharing group.,,1.3,country
modify_tech_sharing_bonus,id = <string> The group to modify. bonus = <float> The new bonus.,modify_tech_sharing_bonus = {     id = us_research     bonus = 0.5 },Modifies the specified technology sharing group.,,1.3,country
add_ideas,<idea> The idea to add.,add_ideas = my_idea add_ideas = {     my_idea_1     my_idea_2 },Adds the specified ideas to the current scope.,Can be used as a scope to add multiple at once.,1,country
add_timed_idea,idea = <idea> The idea to add. days = <int> / <variable> The number of days to add the idea for.,add_timed_idea = {     idea = my_idea     days = 180 },Adds the specified ideas to the current scope for the specified number of days.,,1,country
modify_timed_idea,idea = <idea> The idea to modify. days = <int> / <variable> The number of days to add to the idea.,modify_timed_idea = {     idea = my_idea     days = 60 },Extends the duration of the timed idea by the specified amount.,,1,country
swap_ideas,add_idea = <idea> The idea to add. remove_idea = <idea> The idea to remove.,swap_ideas = {     remove_idea = my_idea_1     add_idea = my_idea_2 },Switches two ideas with a tooltip displaying any modifier differences between them.,,1.3,country
remove_ideas,<idea> The idea to remove.,remove_ideas = my_idea remove_ideas = {     my_idea_1     my_idea_2 },Removes the specified idea from the current scope.,Can be used as a scope to remove multiple at once.,1,country
remove_ideas_with_trait,<trait> The trait to target.,remove_ideas_with_trait = motorized_equipment_manufacturer,Removes all ideas for the current scope that use the specified trait.,,1,country
show_ideas_tooltip,<idea> The idea to display.,show_ideas_tooltip = my_idea,Displays the specified idea in the tooltip for the current effect scope. Does not add the idea.,,1,country
load_oob,<oob> The OOB to load.,"load_oob = ""GER_default""","Loads the specified OOB for the current scope, applying the effects within.",,1,country
division_template,name The name of the division. regiments = {     <unit> = { x = 0 y = 0 } } support = {     <unit> = { x = 0 y = 0 } }  The composition of the division.,"division_template = {     name = ""Test""     regiments = {         infantry = { x = 0 y = 0 }         infantry = { x = 0 y = 1 }         infantry = { x = 0 y = 2 }         infantry = { x = 0 y = 3 }     }     support = {          military_police = { x = 0 y = 0 }     }  }",Creates and adds the specified division template to the current scope.,The x and y attributes represent the rows and columns in the division designer.,1,country
set_division_template_lock,division_template = <string> The name of the division template. is_locked = <bool> Whether the division is locked or not.,"set_division_template_lock = {     division_template = ""Infantry Division""     is_locked = yes }","Toggles the locked status on a division template for the current scope, which prevents editing or deletion.",,1.5,country
delete_unit_template_and_units,division_template = <string> The name of the division template.,"delete_unit_template_and_units = {     division_template = ""Infantry Division"" }",Deletes the specified division template and all units using it for the current scope.,,1.5,country
set_equipment_fraction,<float> / <variable> The fraction of equipment to remove.,set_equipment_fraction = 0.5,Reduces the overall equipment stockpile by the specified fraction.,This should not be used in civil wars to simulate stockpile splitting. start_civil_war now automatically divides stockpiles according to the respective size.,1,country
add_equipment_to_stockpile,type = <equipment> The equipment to add. Can be archetype. amount = <int> The amount to add. producer = <scope> Defines who produced the equipment. Optional.,add_equipment_to_stockpile = {     type = infantry_equipment     amount = 100     producer = GER },Adds the specified equipment to the current scope.,Note that removal will only remove equipment with the same producer defined in the effect.,1,country
send_equipment,type = <equipment> The equipment to add. Can be archetype. amount = <int> / <variable> The amount to add. target = <scope> / <variable> Which country receives the equipment.,send_equipment = {     equipment = infantry_equipment     amount = 100     target = GER },"Sends the specified amount of equipment to the specified target, removing said equipment from the current scope.",,1,country
create_production_license,target = <scope> Which country receives the license. cost_factor = <float> Modifies the production cost. Equipment scope type = <equipment> The equipment the country is licensed to produce. Must be an non-archetype equipment.,create_production_license = {     target = HUN     equipment = {         type = fighter_equipment_1     }     cost_factor = 0 },Grants the specified country a licensed to produce the specified equipment from the current scope.,,1.4,country
create_equipment_variant,name = <string> The name of the variant type = <equipment> The equipment the variant is of. parent_version = <int> Ordering for multiple variants. Upgrade scope <upgrade> = <amount> The upgrades configuration for the variant.,"create_equipment_variant = {      name = ""Montecuccoli Class""      type = light_cruiser_1      upgrades = {          ship_reliability_upgrade = 3          ship_engine_upgrade = 3          ship_gun_upgrade = 3          ship_anti_air_upgrade = 3      } }",Creates the specified equipment variant for the current scope.,,1,country
add_equipment_production,amount = <int> The amount to produce. Optional. requested_factories = <int> The number of factories to assigned initially. Optional. progress = <float> The initial production progress. Optional. efficiency = <float> The initial production efficiency. Optional. Equipment scope type = <equipment> The name of the equipment to produce. creator = <scope> The country which is producing the equipment. Used if root scope isn't producer. Optional. version_name = <string>The name of the variant to produce. Optional.,add_equipment_production = {     equipment = {         type = light_cruiser_2     }     requested_factories = 1     progress = 0.95     amount = 1 },Starts a production line for the specified equipment for the current scope.,,1,country
add_manpower,<int> / <variable> The amount to add.,add_manpower = 100000 add_manpower = var:my_var,Adds the specified amount of manpower to the current scope.,,1,country
army_experience,<float> / <variable> The amount to add.,army_experience = 10,Adds the specified amount of army experience to the current scope.,,1,country
create_corps_commander,name = <string> The name of the leader. picture = <string> The graphical reference of the picture of the leader. skill = <int> The skill of the leader. attack_skill = <int> The attack skill of the leader. defense_skill = <int> The defense skill of the leader. planning_skill = <int> The planning skill of the leader. logistics_skill = <int> The logistics skill of the leader. traits = { <trait> } The traits the leader spawns with. female = <bool> The gender of the leader.,"create_corps_commander = { 	name = ""Jean de Lattre de Tassigny"" 	picture = ""Portrait_France_Jean_de_Lattre_de_Tassigny.dds"" 	traits = { trickster brilliant_strategist } 	skill = 4 	attack_skill = 4 	defense_skill = 2 	planning_skill = 4 	logistics_skill = 3 }",Creates a commander for the current scope with the specified attributes.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1,country
create_field_marshal,name = <string> The name of the leader. picture = <string> The graphical reference of the picture of the leader. skill = <int> The skill of the leader. attack_skill = <int> The attack skill of the leader. defense_skill = <int> The defense skill of the leader. planning_skill = <int> The planning skill of the leader. logistics_skill = <int> The logistics skill of the leader. traits = { <trait> } The traits the leader spawns with.,"create_field_marshal = { 	name = ""Maurice Gamelin"" 	picture = ""Portrait_France_Maurice_Gamelin.dds"" 	traits = { defensive_doctrine } 	skill = 2 	attack_skill = 1 	defense_skill = 3 	planning_skill = 2 	logistics_skill = 1 }",Creates a field marshal for the current scope with the specified attributes.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1,country
navy_experience,<float> / <variable> The amount to add.,navy_experience = 10,Adds the specified amount of navy experience to the current scope.,,1,country
destroy_ships,type = <ship> The type of ship to destroy. count = <int> or all The amount to destroy.,destroy_ships = {     type = destroyer     count = all },Destroys the specified type and amount of ships controlled by the current scope.,,1.5,country
transfer_navy,target = <scope> The target country.,transfer_navy = {     target = GER },Transfers the current scope navy to the specified country.,,1.5,country
transfer_ship,type = <ship> The type of ship to transfer.<br target = <scope> The target country. prefer_name = <string> The new name for the ships in the target country. Optional.,"transfer_ship = {     prefer_name = ""HMS Achilles""     type = light_cruiser     target = NZL }",Transfers the specified type of ship from the current scope to the specified country.,,1.4,country
create_navy_leader,name = <string> The name of the leader. picture = <string> The graphical reference of the picture of the leader. skill = <int> The skill of the leader. traits = { <trait> } The traits the leader spawns with.,"create_navy_leader = { 	name = ""Francois Darlan""     picture = ""Portrait_France_Francois_Darlan.dds"" 	traits = { superior_tactician } 	skill = 3 }",Creates a naval leader for the current scope with the specified attributes.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1,country
air_experience,<float> / <variable> The amount to add.,air_experience = 10,Adds the specified amount of air experience to the current scope.,,1,country
add_ace,name = <string> The name of the ace. surname = <string> The surname of the ace. callsign = <string> The callsign of the ace. type = <type> The ace type. is_female = <bool> The gender of the ace.,"add_ace = {     name = ""Amelia""     surname = ""Earhart""     callsign = ""Revenant""     type = fighter_genius     is_female = yes }",Adds an ace for the current scope.,Ace types found in /Hearts of Iron IV/common/aces/*.txt.,1,country
add_ai_strategy,type = <type> The type of strategy. id = <scope> What country the strategy is against. value = <int> The weighting added by the strategy.,add_ai_strategy = {     type = alliance     id = GER     value = 200 },Sets an AI strategy for the current scope.,See AI Modding for more details.,1,country
state_event,"id = <event> The event to fire. days = <event> / <variable> Fires the event in the specified number of days. Optional. hours = <event> / <variable> Fires the event in the specified number of hours. Optional. random = <event> Adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. Optional. trigger_for = <scope> Fires event in the specified scope.",state_event = {     id = my_event.1     days = 10     random = 50     trigger_for = controller },Fires the specified event for the current state.,Where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events. Using days = <event> / <variable> or hours may still be bugged and will not fire the event.,1,state
set_state_flag,<flag> An unique string to identify the state flag with.,set_state_flag = my_flag,Defines a state flag.,,1,state
clr_state_flag,<flag> The unique string of a state flag to clear.,clr_state_flag = my_flag,Clears a defined state flag.,,1,state
modify_state_flag,flag = <flag> The state flag to modify. value = <value> The value to set it to: 0 or 1,modify_state_flag = {     flag = my_flag     value = 1 },Modifies a state flag.,Use variables instead.,1.3,state
set_state_name,<string> Defines the new name.,"set_state_name = ""Funland""",Changes the current state's name to the specified name.,,1.3,state
reset_state_name,<bool> Boolean.,reset_state_name = yes,Resets any changes to the current state's name.,,1.3,state
add_claim_by,<scope> / <variable> The country to add the claim for.,add_claim_by = SOV,Adds a claim for the specified country on the current scope.,,1,state
remove_claim_by,<scope> / <variable> The country to remove the claim for.,remove_claim_by = SOV,Removes a claim by the specified country on the current scope.,,1,state
add_core_of,<scope> / <variable> The country to add the core for.,add_core_of = SOV,Adds a core for the specified country on the current scope.,,1,state
remove_core_of,<scope> / <variable> The country to remove the core for.,remove_core_of = SOV,Removes a core for the specified country on the current scope.,,1,state
set_demilitarized_zone,<bool> Boolean.,set_demilitarized_zone = yes,Makes the current scope a demilitarized zone.,,1,state
set_state_category,<category> The category to change to.,set_state_category = rural,Changes the current state category to the specified category.,Categories are found in /Hearts of Iron IV/common/state_category/*.txt,1.3,state
add_state_modifier,Modifier scope <modifier> = <float> Adds a modifier to the state.,add_state_modifier = {     modifier = {         local_resources = 2.0     } },Adds a modifier to the current state.,,1.3,state
add_manpower,<int> / <variable> The amount to add.,add_manpower = 10000,Adds the specified amount of manpower to the current state.,,1,state
add_resource,type = <resource> The resource to add. amount = <int> / <variable> The amount to add.,add_resource = {     type = oil     amount = 100 },Adds the specified resource in the specified amount to the current state.,,1,state
set_border_war,<bool> Boolean.,set_border_war = yes,Enables Border War status for the current state.,,1,state
create_unit,division = <division string> The division string. owner = <scope> The owner of the division. prioritize_location = <province> Prioritize the specified province in the state.,"create_unit = {     division = ""name = \""Infantry Division\"" division_template = \""Infantry Division\"" start_experience_factor = 0.5 start_equipment_factor = 0.5""     owner = GER }",Adds the specified division to the current state.,The division string must be formatted as it is seen in the examples.,1.3,state
add_building_construction,"type = <string> The building to add. level = <int> / <variable> The level to set the building to. instant_build = <bool> Defines whether the buildings are instantly built. province = <id> Defines the exact province to add provincal buildings in. Can be used as a scope. Province scope all_provinces = <bool> Affect all provinces. Used in the province scope. limit_to_coastal = <bool> Affect coastal provinces. Used in the province scope. limit_to_naval_base = <bool> Affect naval base provinces. Used in the province scope. limit_to_border = <bool> Affect border provinces. Used in the province scope. level = <int> Affect only provinces with buildings level below, at or above the specified level. Used in the province scope. id = <id> Affect the specified province. Used in the province scope.",add_building_construction = {     type = arms_factory     level = 5     instant_build = yes }  add_building_construction = {     type = bunker     level = 10     instant_build = yes     province = {         all_provinces = yes         limit_to_border = yes     } }  add_building_construction = {     type = bunker     level = 1     instant_build = yes     province = 2999 },Starts construction in the current state for the specified building.,,1,state
set_building_level,"type = <string> The building to add. level = <int> / <variable> The level to set the building to. instant_build = <bool> Defines whether the buildings are instantly built. province = <id> Defines the exact province to add provincal buildings in. Can be used as a scope. Province scope all_provinces = <bool> Affect all provinces. Used in the province scope. limit_to_coastal = <bool> Affect coastal provinces. Used in the province scope. limit_to_naval_base = <bool> Affect naval base provinces. Used in the province scope. limit_to_border = <bool> Affect border provinces. Used in the province scope. level = <int> Affect only provinces with buildings level below, at or above the specified level. Used in the province scope. id = <id> Affect the specified province. Used in the province scope.",set_building_level = {     type = infrastructure     level = 10     instant_build = yes }  set_building_level = {     type = bunker     level = 3     province = {         all_provinces = yes         limit_to_border = yes         level < 3     } },Sets the specified building to the current state (or provinces within the state).,The province scope is used for provincal level buildings.,1.4,state
damage_building,type = <building> The building to damage. damage = <float> The amount of damage to inflict. province = <id> The province to target for provincal buildings.,damage_building = {     type = infrastructure     damage = 1 },Damages the specified building in the current state.,The health of buildings is determined by the value attribute in a building's definition. This is multiplied by their level to get their total health.,1.3,state
remove_building,type = <building> The building to remove. level = <int> / <variable> The levels to remove.,remove_building = {     type = arms_factory     level = 5 },"Removes the specified building in the current state. For shared buildings level determines the amount, whereas for the others it is the actual level.",,1,state
add_extra_state_shared_building_slots,<int> / <variable> The amount of slots to add or remove.,add_extra_state_shared_building_slots = 2,Adjusts the number of shared building slots for the current state.,,1,state
unit_leader_event,"id = <event> The event to fire. days = <event> / <variable> Fires the event in the specified number of days. Optional. hours = <event> / <variable> Fires the event in the specified number of hours. Optional. random = <event> Adds a random number (between 0 and random, inclusive) of hours to the scheduled fire time. Optional.",unit_leader_event = {     id = my_event.1     days = 10     random = 50 },Fires the specified event for the owner of the current unit leader.,Uses a special interface displaying the current unit leader portrait. Where triggers do not need to be repeatedly checked random can be a performance light alternative to mean_time_to_happen for scheduling events.,1.5,unit leader
set_unit_leader_flag,<flag> An unique string to identify the unit leader flag with.,set_unit_leader_flag = my_flag,Defines a unit leader flag.,,1.5,unit leader
clr_unit_leader_flag,<flag> The unique string of a unit leader flag to clear.,clr_unit_leader_flag = my_flag,Clears a defined unit leader flag.,,1.5,unit leader
modify_unit_leader_flag,flag = <flag> The unit leader flag to modify. value = <value> The value to set it to: 0 or 1,modify_unit_leader_flag = {     flag = my_flag     value = 1 },Modifies a unit leader flag.,,1.5,unit leader
promote_leader,<bool> Boolean,promote_leader = yes,Promotes the current unit leader to Field Marshal (if Commander.,,1.5,unit leader
demote_leader,<bool> Boolean,demote_leader = yes,Demotes the current unit leader to Commander (if Field Marshal).,,1.5,unit leader
retire,<bool> Boolean>,retire = yes,Retires the current unit leader (removing them).,,1.5,unit leader
remove_unit_leader,<id> The id of the unit leader.,remove_unit_leader = 70,Removes the specified unit leader by their id.,,1,unit leader
set_nationality,<scope> / <variable> The target country.,set_nationality = GER,"Switches the current unit leader to the specified country, giving them the leader.",,1.5,unit leader
add_unit_leader_trait,<trait> The trait to add.,add_unit_leader_trait = old_guard,Adds the specified trait to the current unit leader.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1,unit leader
remove_unit_leader_trait,<trait> The trait to remove.,remove_unit_leader_trait = old_guard,Removes the specified trait from the current unit leader.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1,unit leader
add_timed_unit_leader_trait,<trait> The trait to add. days = <int> The duration of the trait.,add_timed_unit_leader_trait = {     trait = wounded     days = 90 },Adds the specified trait to the current unit leader for the specified duration.,Traits are found in /Hearts of Iron IV/common/unit_leader/*.txt.,1.5,unit leader
supply_units,<int> / <variable> The amount of hours of supply.,supply_units = 24,Adds the specified amount of hours of supply to troops led by the current unit leader.,,1.5,unit leader
add_max_trait,<int> The amount to add.,add_max_trait = 1,Adds the specified amount of assignable trait slots to the current unit leader.,,1.5,unit leader
add_skill_level,<int> The skill to add.,add_skill_level = 1,Adds skill to the current unit leader.,,1.5,unit leader
add_logistics,<int> The skill to add.,add_logistics = 1,Adds logistics skill to the current unit leader.,,1.5,unit leader
add_planning,<int> The skill to add.,add_planning = 1,Adds planning skill to the current unit leader.,,1.5,unit leader
add_defense,<int> The skill to add.,add_defense = 1,Adds defense skill to the current unit leader.,,1.5,unit leader
add_attack,<int> The skill to add.,add_attack = 1,Adds attack skill to the current unit leader.,,1.5,unit leader
add_temporary_buff_to_units,combat_offense = <float> The bonus to grant. Optional. combat_breakthrough = <float> The bonus to grant. Optional. combat_defense = <float> The bonus to grant. Optional. combat_entrenchment = <float> The bonus to grant. Optional. org_damage_multiplier = <float> The bonus to grant. Optional. str_damage_multiplier = <float> The bonus to grant. Optional. war_support_reduction_on_damage = <float> The bonus to grant. Optional. cannot_retreat_while_attacking = <float> The bonus to grant. Optional. cannot_retreat_while_defending = <float> The bonus to grant. Optional. days = <int> The duration of the buff. Optional. tooltip = <string> The tooltip to display for the buff.,"add_temporary_buff_to_units = {     combat_offense = 0.25     combat_breakthrough = 0.25     org_damage_multiplier = -1.0     str_damage_multiplier = 0.25     war_support_reduction_on_damage = 0.2     cannot_retreat_while_attacking = 1.0 				     days = 7     tooltip = ABILITY_FORCE_ATTACK_TOOLTIP }",Adds the specified combat buff to the current unit leader.,,1.5,unit leader
boost_planning,<float> The amount to add.,boost_planning = 1,Improves the planning of units controlled by the current unit leader.,,1.5,unit leader
